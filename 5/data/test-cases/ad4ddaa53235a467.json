{
  "uid" : "ad4ddaa53235a467",
  "name" : "Example for equal",
  "fullName" : "tests.test_example.TestExample#test_example",
  "historyId" : "2133fcefc80b68a454be42153edbc3e8",
  "time" : {
    "start" : 1753962645366,
    "stop" : 1753962645389,
    "duration" : 23
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: FAILURE: check 1 == 2:  \uD83D\uDCCD (test_example.py:10)\ntests/test_example.py:10 in test_example() -> page.check_equal_with_line(1, 2)\nmethods.py:41 in check_equal_with_line() -> check.equal(actual, expected, msg=msg)\n\nFAILURE: check ['a', 'b', 'c'] == ['a', 'b']: Lists is dose not match \uD83D\uDCCD (test_example.py:13)\nFAILURE: check karamba == karAmba: Text dose not match \uD83D\uDCCD (test_example.py:14)\n------------------------------------------------------------\nFailed Checks: 3",
  "statusTrace" : "FAILURE: check 1 == 2:  \uD83D\uDCCD (test_example.py:10)\ntests/test_example.py:10 in test_example() -> page.check_equal_with_line(1, 2)\nmethods.py:41 in check_equal_with_line() -> check.equal(actual, expected, msg=msg)\n\nFAILURE: check ['a', 'b', 'c'] == ['a', 'b']: Lists is dose not match \uD83D\uDCCD (test_example.py:13)\nFAILURE: check karamba == karAmba: Text dose not match \uD83D\uDCCD (test_example.py:14)\n------------------------------------------------------------\nFailed Checks: 3",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: FAILURE: check 1 == 2:  \uD83D\uDCCD (test_example.py:10)\ntests/test_example.py:10 in test_example() -> page.check_equal_with_line(1, 2)\nmethods.py:41 in check_equal_with_line() -> check.equal(actual, expected, msg=msg)\n\nFAILURE: check ['a', 'b', 'c'] == ['a', 'b']: Lists is dose not match \uD83D\uDCCD (test_example.py:13)\nFAILURE: check karamba == karAmba: Text dose not match \uD83D\uDCCD (test_example.py:14)\n------------------------------------------------------------\nFailed Checks: 3",
    "statusTrace" : "FAILURE: check 1 == 2:  \uD83D\uDCCD (test_example.py:10)\ntests/test_example.py:10 in test_example() -> page.check_equal_with_line(1, 2)\nmethods.py:41 in check_equal_with_line() -> check.equal(actual, expected, msg=msg)\n\nFAILURE: check ['a', 'b', 'c'] == ['a', 'b']: Lists is dose not match \uD83D\uDCCD (test_example.py:13)\nFAILURE: check karamba == karAmba: Text dose not match \uD83D\uDCCD (test_example.py:14)\n------------------------------------------------------------\nFailed Checks: 3",
    "steps" : [ {
      "name" : "❌ Error: expected <2>, received <1> —  \uD83D\uDCCD (test_example.py:10)",
      "time" : {
        "start" : 1753962645383,
        "stop" : 1753962645383,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "✅ Check: value <2> is correct.",
      "time" : {
        "start" : 1753962645386,
        "stop" : 1753962645386,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "✅ Check: value <3> is correct.",
      "time" : {
        "start" : 1753962645387,
        "stop" : 1753962645387,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "❌ Error: expected <['a', 'b']>, received <['a', 'b', 'c']> — Lists is dose not match \uD83D\uDCCD (test_example.py:13)",
      "time" : {
        "start" : 1753962645388,
        "stop" : 1753962645388,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "❌ Error: expected <karAmba>, received <karamba> — Text dose not match \uD83D\uDCCD (test_example.py:14)",
      "time" : {
        "start" : 1753962645389,
        "stop" : 1753962645389,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 5,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_example"
  }, {
    "name" : "subSuite",
    "value" : "TestExample"
  }, {
    "name" : "host",
    "value" : "pkrvmjbmru5nbw0"
  }, {
    "name" : "thread",
    "value" : "2454-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_example"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 3,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 3
      },
      "items" : [ {
        "uid" : "aba2d7934988dd4e",
        "reportUrl" : "https://lambotik.github.io/pytest-check-improve/3//#testresult/aba2d7934988dd4e",
        "status" : "failed",
        "statusDetails" : "AssertionError: FAILURE: check 1 == 2:  \uD83D\uDCCD (test_example.py:10)\ntests/test_example.py:10 in test_example() -> page.check_equal_with_line(1, 2)\nmethods.py:41 in check_equal_with_line() -> check.equal(actual, expected, msg=msg)\n\nFAILURE: check ['a', 'b', 'c'] == ['a', 'b']: Lists is dose not match \uD83D\uDCCD (test_example.py:13)\nFAILURE: check karamba == karAmba: Text dose not match \uD83D\uDCCD (test_example.py:14)\n------------------------------------------------------------\nFailed Checks: 3",
        "time" : {
          "start" : 1753962169731,
          "stop" : 1753962169753,
          "duration" : 22
        }
      }, {
        "uid" : "deb36280811807a0",
        "reportUrl" : "https://lambotik.github.io/pytest-check-improve/2//#testresult/deb36280811807a0",
        "status" : "failed",
        "statusDetails" : "AssertionError: FAILURE: check 1 == 2:  \uD83D\uDCCD (test_example.py:10)\ntests/test_example.py:10 in test_example() -> page.check_equal_with_line(1, 2)\nmethods.py:41 in check_equal_with_line() -> check.equal(actual, expected, msg=msg)\n\nFAILURE: check ['a', 'b', 'c'] == ['a', 'b']: Lists is dose not match \uD83D\uDCCD (test_example.py:13)\nFAILURE: check karamba == karAmba: Text dose not match \uD83D\uDCCD (test_example.py:14)\n------------------------------------------------------------\nFailed Checks: 3",
        "time" : {
          "start" : 1753962021265,
          "stop" : 1753962021287,
          "duration" : 22
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "ad4ddaa53235a467.json",
  "parameterValues" : [ ]
}